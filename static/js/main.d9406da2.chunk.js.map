{"version":3,"sources":["logo.svg","headerStyle.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","randColor","String","Math","floor","random","toString","App","className","id","style","color","class","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","Array","from","getElementsByClassName","forEach","letter","addEventListener","e","classList","add","opacity","remove","this","currentId","currentTab","tabContainerHeight","$","scroll","onScroll","resize","onResize","event","element","preventDefault","scrollTop","attr","offset","top","animate","checkTabContainerPosition","findCurrentTabSelector","setSliderCss","height","addClass","removeClass","newCurrentId","newCurrentTab","self","each","offsetTop","offsetBottom","width","left","css","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d9406da2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\nimport './index.css'\r\n\r\n\r\n\r\n\r\nfunction randColor() {\r\n\r\n  return String(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\r\n}\r\n\r\nexport default randColor;\r\n\r\n","import React from 'react';\nimport Rand from './headerStyle'\nimport logo from './logo.svg';\nimport './App.css';\nimport randColor from './headerStyle';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    \n    {/*name info*/}\n\n    <div id=\"links\">\n  <button className=\"purple\" style={{color: \"blue\"}}>About</button>\n  <button className=\"blue\">Portfolio</button>\n  <button className=\"green\">Contact</button>\n</div>\n<div id=\"content\">\n<div id=\"name\">\n  <span className=\"logo\">\n    {/*<span id=\"1\" className=\"letter\" classNameName=\"hovered\">D</span>*/}\n  <span id=\"1\" className=\"letter\" style={{color:randColor()}} >D</span>\n  <span id=\"2\" className=\"letter\" style={{color:randColor()}} >a</span>\n  <span id=\"3\" className=\"letter\" style={{color:randColor()}} >v</span>\n  <span id=\"4\" className=\"letter\" style={{color:randColor()}} >i</span>\n  <span id=\"5\" className=\"letter\" style={{color:randColor()}} >d</span>\n  </span>\n  <span className=\"logo\">\n    <span id=\"6\" className=\"letter\" style={{color:randColor()}} >M</span>\n    <span id=\"7\" className=\"letter\" style={{color:randColor()}} >i</span>\n    <span id=\"8\" className=\"letter\" style={{color:randColor()}} >c</span>\n    <span id=\"9\" className=\"letter\" style={{color:randColor()}} >k</span>\n    <span id=\"10\" className=\"letter\" style={{color:randColor()}} >e</span>\n    <span id=\"11\" className=\"letter\" style={{color:randColor()}} >v</span>\n    <span id=\"12\" className=\"letter\" style={{color:randColor()}} >i</span>\n    <span id=\"13\" className=\"letter\" style={{color:randColor()}} >c</span>\n    <span id=\"14\" className=\"letter\" style={{color:randColor()}} >i</span>\n    <span id=\"15\" className=\"letter\" style={{color:randColor()}} >u</span>\n    <span id=\"16\" className=\"letter\" style={{color:randColor()}} >s</span>\n    \n  </span>\n</div>\n\n\n<p>My desire is to create.</p>\n<p>Website down 8/4 changing format and interactions.</p>\n\n\n<section class=\"et-hero-tabs\">\n    <h1>STICKY SLIDER NAV</h1>\n    <h3>Sliding content with sticky tab nav</h3>\n    <div class=\"et-hero-tabs-container\">\n      <a class=\"et-hero-tab\" href=\"#tab-es6\">ES6</a>\n      <a class=\"et-hero-tab\" href=\"#tab-flexbox\">Flexbox</a>\n      <a class=\"et-hero-tab\" href=\"#tab-react\">React</a>\n      <a class=\"et-hero-tab\" href=\"#tab-angular\">Angular</a>\n      <a class=\"et-hero-tab\" href=\"#tab-other\">Other</a>\n      <span class=\"et-hero-tab-slider\"></span>\n    </div>\n  </section>\n\n  <main class=\"et-main\">\n    <section class=\"et-slide\" id=\"tab-es6\">\n      <h1>ES6</h1>\n      <h3>something about es6</h3>\n    </section>\n    <section class=\"et-slide\" id=\"tab-flexbox\">\n      <h1>Flexbox</h1>\n      <h3>something about flexbox</h3>\n    </section>\n    <section class=\"et-slide\" id=\"tab-react\">\n      <h1>React</h1>\n      <h3>something about react</h3>\n    </section>\n    <section class=\"et-slide\" id=\"tab-angular\">\n      <h1>Angular</h1>\n      <h3>something about angular</h3>\n    </section>\n    <section class=\"et-slide\" id=\"tab-other\">\n      <h1>Other</h1>\n      <h3>something about other</h3>\n    </section>\n  </main>\n\n\n</div>\n      \n    </div>\n  );\n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport randColor from './headerStyle';\nimport $ from 'jquery';\nimport './navBar.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nArray.from(document.getElementsByClassName('letter')).forEach(letter => {\n  letter.addEventListener(\"mouseover\", (e) => {\n    letter.classList.add(\"hovered\")\n    letter.style.color = randColor();\n    letter.style.opacity = \".9\";\n  })\n  letter.addEventListener(\"animationend\", (e) => {\n    letter.classList.remove(\"hovered\")\n  })\n})\n\n\n\nclass StickyNavigation {\n\n\n\n\t//Add an event listener that fires when a user clicks a button:\n\n\t// document.getElementById(\"myBtn\").addEventListener(\"click\", displayDate);\n\t\n\t//element.addEventListener(event, function, useCapture);\n\n\tconstructor() {\n\t\tthis.currentId = null;\n\t\tthis.currentTab = null;\n\t\tthis.tabContainerHeight = 70;\n\t\tlet self = this;\n\n\t\t// $('.et-hero-tab').click(function() { \n\t\t// \tself.onTabClick(event, $(this)); \n\t\t// });\n\t\t// $(window).scroll(() => { this.onScroll(); });\n\t\t// $(window).resize(() => { this.onResize(); });\n\n\t\t// $('.et-hero-tab').click(function() { \n\t\t// \tself.onTabClick(event, $(this)); \n\t\t// });\n\t\t$(window).scroll(() => { this.onScroll(); });\n\t\t$(window).resize(() => { this.onResize(); });\n\t}\n\t\n\t\n\tonTabClick(event, element) {\n\t\tevent.preventDefault();\n\t\tlet scrollTop = $(element.attr('href')).offset().top - this.tabContainerHeight + 1;\n\t\t$('html, body').animate({ scrollTop: scrollTop }, 600);\n\t}\n\t\n\tonScroll() {\n\t\tthis.checkTabContainerPosition();\n    this.findCurrentTabSelector();\n\t}\n\t\n\tonResize() {\n\t\tif(this.currentId) {\n\t\t\tthis.setSliderCss();\n\t\t}\n\t}\n\t\n\tcheckTabContainerPosition() {\n\t\tlet offset = $('.et-hero-tabs').offset().top + $('.et-hero-tabs').height() - this.tabContainerHeight;\n\t\tif($(window).scrollTop() > offset) {\n\t\t\t$('.et-hero-tabs-container').addClass('et-hero-tabs-container--top');\n\t\t} \n\t\telse {\n\t\t\t$('.et-hero-tabs-container').removeClass('et-hero-tabs-container--top');\n\t\t}\n\t}\n\t\n\tfindCurrentTabSelector(element) {\n\t\tlet newCurrentId;\n\t\tlet newCurrentTab;\n\t\tlet self = this;\n\t\t$('.et-hero-tab').each(function() {\n\t\t\tlet id = $(this).attr('href');\n\t\t\tlet offsetTop = $(id).offset().top - self.tabContainerHeight;\n\t\t\tlet offsetBottom = $(id).offset().top + $(id).height() - self.tabContainerHeight;\n\t\t\tif($(window).scrollTop() > offsetTop && $(window).scrollTop() < offsetBottom) {\n\t\t\t\tnewCurrentId = id;\n\t\t\t\tnewCurrentTab = $(this);\n\t\t\t}\n\t\t});\n\t\tif(this.currentId != newCurrentId || this.currentId === null) {\n\t\t\tthis.currentId = newCurrentId;\n\t\t\tthis.currentTab = newCurrentTab;\n\t\t\tthis.setSliderCss();\n\t\t}\n\t}\n\t\n\tsetSliderCss() {\n\t\tlet width = 0;\n\t\tlet left = 0;\n\t\tif(this.currentTab) {\n\t\t\twidth = this.currentTab.css('width');\n\t\t\tleft = this.currentTab.offset().left;\n\t\t}\n\t\t$('.et-hero-tab-slider').css('width', width);\n\t\t$('.et-hero-tab-slider').css('left', left);\n\t}\n\t\n}\n\nnew StickyNavigation();\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}